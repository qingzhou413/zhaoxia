CREATE DATABASE IF NOT EXISTS joysuch_lrm CHARACTER SET UTF8;
use joysuch_lrm;

DROP TABLE IF EXISTS SYS_CONFIG;
-- 系统配置表
CREATE TABLE SYS_CONFIG(
    CONFIG_CODE VARCHAR(128) NOT NULL,
    CONFIG_NAME VARCHAR(256) NOT NULL,
    CONFIG_VAL VARCHAR(512) NULL,
    CONFIG_TYPE VARCHAR(32) NULL,
    CAN_EDIT BOOL NULL DEFAULT TRUE,
    CONSTRAINT PK_SYS_CONFIG_ID PRIMARY KEY(CONFIG_CODE)
)ENGINE=INNODB DEFAULT CHARSET=UTF8;

INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('alarm.music', '监控区域警告音乐', '/home/seekcy/lrm-data/music/demo.mp3', NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('jsopen.build.id', '建筑ID', '200001', NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('jsopen.licence', 'licence', (select licence from js_open_system.SYS_USER where username = 'client'), NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('jsopen.server.url', '开放平台API URL', 'http://127.0.0.1:46000', NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('lrm.server.url', '监控服务URL', 'http://127.0.0.1:8080', NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('label.offline.time', '标签离线时间（秒）', '30', NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('around.radius.millmeter', '附近的人搜索半径（毫米）', '5000', NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('xbx.webservice.url', '西北星WebService接口URL', 'http://222.82.250.210:8089/xbstarcas/services/LocationInfo?wsdl', NULL, 1);
INSERT INTO joysuch_lrm.SYS_CONFIG
(CONFIG_CODE, CONFIG_NAME, CONFIG_VAL, CONFIG_TYPE, CAN_EDIT)
VALUES('xbx.institution.id', '西北星WebService接口机构编号', '12345678', NULL, 1);

DROP TABLE IF EXISTS SYS_USER;
-- 登录用户 SYS_USER
CREATE TABLE SYS_USER(
  UUID VARCHAR(36),
  USER_NAME VARCHAR(64),
  PASSWORD VARCHAR(128),
  USER_TYPE INT COMMENT '用户类型，根据不同的类型，给予不同的权限',
  REMARK VARCHAR(512),
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  VALID BOOL DEFAULT true COMMENT '有效性，物理删除',
  CONSTRAINT PK_SYS_USER PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;

INSERT INTO SYS_USER
(UUID, USER_NAME, PASSWORD, USER_TYPE, REMARK, CREATE_TIME, CREATE_BY, UPDATE_TIME, UPDATE_BY)
VALUES
('1', 'admin', '14e1b600b1fd579f47433b88e8d85291', 1, 'TEST', now(), 'system', now(), 'system');
-- admin/123456


DROP TABLE IF EXISTS SYS_OPERATION_LOG;
-- 系统操作日志 SYS_OPERATION_LOG
CREATE TABLE SYS_OPERATION_LOG(
	UUID VARCHAR(36),
	TYPE INT COMMENT '0：删除, 1：添加, 2：修改, ......',
	USER_ID VARCHAR(36) COMMENT '操作人ID',
	USER_NAME VARCHAR(64) COMMENT '操作人名称',
	ENTITY_SN VARCHAR(36),
	ENTITY_NAME VARCHAR(64),
	REMARK VARCHAR(512),
	CREATE_TIME BIGINT,
	CONSTRAINT PK_SYS_OPERATION_LOG PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB; 

DROP TABLE IF EXISTS DEPARTMENT;
-- 部门
CREATE TABLE DEPARTMENT(
  UUID VARCHAR(36),
  PARENT_ID VARCHAR(36),
  NAME VARCHAR(64),
  CREATE_TIME DATETIME COMMENT '创建时间，用于排序',
  CONSTRAINT PK_DEPT PRIMARY KEY(UUID)
) CHARSET=UTF8 ENGINE=INNODB;
CREATE INDEX IDX_DEPT_PARENT_ID ON DEPARTMENT(PARENT_ID);

DROP TABLE IF EXISTS ALARM_AREA;
CREATE TABLE ALARM_AREA(
  UUID VARCHAR(36),
  RAIL_ID VARCHAR(64),
  RAIL_NAME VARCHAR(64),
  BUILD_ID VARCHAR(36),
  FLOOR_NO VARCHAR(36),
  REMARK VARCHAR(512),
  OVER_BOUNDARY_ALARM INT,
  STOP_ALARM INT,
  STOP_LIMIT_SECONDS INT,
  ACTIVE_PERIOD VARCHAR(1024),
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;

DROP TABLE IF EXISTS ALARM_AREA_LOG;
CREATE TABLE ALARM_AREA_LOG(
  UUID VARCHAR(36),
  RAIL_ID VARCHAR(64),
  RAIL_NAME VARCHAR(64),
  NAME VARCHAR(64),
  SN VARCHAR(64),
  `TYPE` INT,
  `EVENT_TIME` BIGINT,
  HAS_PERM INT,  
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;

DROP TABLE IF EXISTS RAIL_POINT;
CREATE TABLE `RAIL_POINT` (
  `UUID` varchar(36) NOT NULL DEFAULT '',
  `RAIL_ID` varchar(36) DEFAULT NULL,
  `X` int(11) DEFAULT NULL,
  `Y` int(11) DEFAULT NULL,
  PRIMARY KEY (`UUID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS MONITOR;
CREATE TABLE MONITOR(
  UUID VARCHAR(36),
  RAIL_ID VARCHAR(64),
  NAME VARCHAR(64),
  `SN` VARCHAR(64),
  BUILD_ID VARCHAR(64),
  FLOOR_NO VARCHAR(36),
  X INT,
  Y INT,
  TRANS_HOST VARCHAR(64),
  TRANS_NAME VARCHAR(64),
  TRANS_PASS VARCHAR(64),
  TRANS_PORT INT,
  REMARK VARCHAR(512),
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;

DROP TABLE IF EXISTS BUILD_AREA;
CREATE TABLE BUILD_AREA(
  UUID VARCHAR(36),
  RAIL_KEY_INFO VARCHAR(1024),
  NAME VARCHAR(64),
  BUILD_ID VARCHAR(64),
  REMARK VARCHAR(512),
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;


DROP TABLE IF EXISTS ALARM_BELL;
CREATE TABLE ALARM_BELL(
  UUID VARCHAR(36),
  NAME VARCHAR(64),
  `SN` VARCHAR(64),
  BUILD_ID VARCHAR(64),
  FLOOR_NO VARCHAR(36),
  X INT,
  Y INT,
  RANGE_TYPE VARCHAR(64),
  RANGE_FLOOR_NOS VARCHAR(256),
  RANGE_RAILS MEDIUMTEXT,
  REMARK VARCHAR(512),
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;


DROP TABLE IF EXISTS LABEL_BINDING;
CREATE TABLE LABEL_BINDING(
  UUID VARCHAR(36),
  BUILD_ID VARCHAR(64),
  `DEPT` VARCHAR(64) COMMENT '部门',
  `SN` VARCHAR(36),
  REMARK VARCHAR(512),
  PRIV_INFO MEDIUMTEXT,
  NAME VARCHAR(64),
  
  `TYPE` INT COMMENT '人员类型, 西北星: 老人0, 护工1;',
  
  REF_ID VARCHAR(128),
  GENDER VARCHAR(16) COMMENT '男1女0两性2', 
  ID_NUM VARCHAR(32) COMMENT '身份证',
  MARRIAGE VARCHAR(16) COMMENT '10已婚 20未婚',
  ETHINC VARCHAR(16) COMMENT '01 汉族  02蒙古  03 回族  04藏族  05维吾尔  06苗族  07彝族 08壮族 09布依族 10朝鲜族 11满族 12侗族 13瑶族 14白族 15土家族 16哈尼族 17哈萨克族 18傣族 19黎族 20傈僳族',
  HOME_ADDR VARCHAR(512),
  BIRTHDAY VARCHAR(16),
  BLOOD_TYPE VARCHAR(16),
  TELEPHONE VARCHAR(64),
  POLITICAL_LANDSCAPE VARCHAR(16) COMMENT '01中国共产党党员 02中国共产党预备党员 03中国共产主义青年团团员 04中国国民党革命委员会会员 05中国民主同盟盟员 06中国民主建国会会员 07中国民主促进会会员 08中国农工民主党党员 09中国致公党党员 10九三学社社员 11台湾民主自治同盟盟员 12无党派民主人士 13群众',
  HEAD_PIC VARCHAR(256),
  
  `POST` VARCHAR(16) COMMENT '职位 0部长 1组长 2普通员工',
  ENTRY_DATE VARCHAR(16) COMMENT '入职日期',
  PRACTISING_CERTIFICATE VARCHAR(256) COMMENT '所持证书',
  EDUCATIONAL_BACKGROUND VARCHAR(16),
  DEPARTURE VARCHAR(16) COMMENT '是否离职 0在职 1离职',
  
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;
CREATE INDEX IDX_LABEL_BINDING_BUILD_ID ON LABEL_BINDING(`BUILD_ID`);
CREATE INDEX IDX_LABEL_BINDING_DEPT ON LABEL_BINDING(`DEPT`);
CREATE INDEX IDX_LABEL_BINDING_SN ON LABEL_BINDING(`SN`);
CREATE INDEX IDX_LABEL_BINDING_TYPE ON LABEL_BINDING(`TYPE`);
CREATE INDEX IDX_LABEL_BINDING_REF_ID ON LABEL_BINDING(`REF_ID`);

DROP TABLE IF EXISTS ALARM_EVENT;
CREATE TABLE ALARM_EVENT(
  UUID VARCHAR(36),
  BUILD_ID VARCHAR(64),
  `TYPE` VARCHAR(64),
  BINDER_ID VARCHAR(36),
  `MAC` VARCHAR(64),
  `NAME` VARCHAR(128),
  `TIME` DATETIME,
  `LOCATION_FLOOR_NO` VARCHAR(32),
  `LOCATION_X` INT,
  `LOCATION_Y` INT,
  `DETAIL` MEDIUMTEXT,
  `REMARK` VARCHAR(256),
  `MONITORS` MEDIUMTEXT,
  `ALARM_BELLS` MEDIUMTEXT,
  `HANDLE_TIME` DATETIME,
  `HANDLE_REMARK` VARCHAR(512),
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;
CREATE INDEX IDX_ALARM_EVENT_TYPE ON ALARM_EVENT(`TYPE`);
CREATE INDEX IDX_ALARM_EVENT_BINDER_ID ON ALARM_EVENT(`BINDER_ID`);
CREATE INDEX IDX_ALARM_EVENT_MAC ON ALARM_EVENT(`MAC`);
CREATE INDEX IDX_ALARM_EVENT_NAME ON ALARM_EVENT(`NAME`);
CREATE INDEX IDX_ALARM_EVENT_TIME ON ALARM_EVENT(`TIME`);


DROP TABLE IF EXISTS ALARM_BELL_CTRL_EVENT;
CREATE TABLE ALARM_BELL_CTRL_EVENT(
  UUID VARCHAR(36),
  BELL_ID VARCHAR(64),
  `BELL_NAME` VARCHAR(64),
  `BELL_SN` VARCHAR(64),
  EVENT_ID VARCHAR(64),
  `EVENT_TYPE` VARCHAR(64),
  `EVENT_MAC` VARCHAR(64),
  `EVENT_NAME` VARCHAR(128),
  OPER_TYPE VARCHAR(32) COMMENT '开on 关off',
  OPER_RES INT,
  RES_TIME DATETIME,
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;

DROP TABLE IF EXISTS PRIV_TEMPLATE;
CREATE TABLE PRIV_TEMPLATE(
  UUID VARCHAR(36),
  BUILD_ID VARCHAR(64),
  NAME VARCHAR(64),
  PRIV_INFO MEDIUMTEXT,
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;

DROP TABLE IF EXISTS HD_RECORDER;
CREATE TABLE `HD_RECORDER` (
  `UUID` varchar(36) NOT NULL DEFAULT '',
  `BUILD_ID` varchar(64) DEFAULT NULL,
  `NAME` varchar(64) DEFAULT NULL,
  `TRANS_HOST` varchar(64) DEFAULT NULL,
  `TRANS_NAME` varchar(64) DEFAULT NULL,
  `TRANS_PASS` varchar(64) DEFAULT NULL,
  `TRANS_PORT` int(11) DEFAULT NULL,
  `REMARK` VARCHAR(256),
  MONITOR_STRING VARCHAR(2048),
  PRIMARY KEY (`UUID`),
  KEY `HD_RECORDER_BUILD_ID` (`BUILD_ID`)
)CHARSET=UTF8 ENGINE=INNODB;

DROP TABLE IF EXISTS LOCATION_LABEL;
CREATE TABLE LOCATION_LABEL(
  UUID VARCHAR(36),
  BUILD_ID VARCHAR(64),
  `SN` VARCHAR(36),
  `REMARK` VARCHAR(256),
  `BINDED` INT DEFAULT 0,
  BIND_NAME VARCHAR(64),
  BINDER_ID VARCHAR(36),
  CREATE_TIME DATETIME,
  CREATE_BY VARCHAR(64),
  UPDATE_TIME DATETIME,
  UPDATE_BY VARCHAR(64),
  PRIMARY KEY(UUID)
)CHARSET=UTF8 ENGINE=INNODB;
CREATE INDEX IDX_LOCATION_LABEL_BUILD_ID ON LOCATION_LABEL(BUILD_ID);
CREATE INDEX IDX_LOCATION_LABEL_SN ON LOCATION_LABEL(SN);
